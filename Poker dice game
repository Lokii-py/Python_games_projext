# Find highest score
def find_high_score (values):
   high_score = 0


   for goal in range(1, 7):
       score = check_singles(values, goal)


       if score > high_score:
           high_score = score
   #check three, four, and five of a kind
   high_score = max(high_score, check_three_of_kind(values))
   high_score = max(high_score, check_four_of_kind(values))
   high_score = max(high_score, check_five_of_kind(values))


   #check full house
   high_score = max(high_score, check_full_house(values))


   #check for straight house
   high_score = max(high_score, check_straight(values))


   return high_score


# Add all occurences of goal value
def check_singles(dice, goal):
   score = 0


   score = sum(d for d in dice if d == goal )
   return score


# Check for three of a kind (score = 30)
def check_three_of_kind(dice):
  
   for i in range (len(dice) -2):
       if dice[i] == dice[i+1] == dice[i+2]:
           return 30
   return 0


# Check for four of a kind (score = 40)
def check_four_of_kind(dice):
   for i in range(len(dice) - 3):
       if dice[i] == dice[i+1] == dice[i+2] == dice[i+3]:
           return 40
   return 0


# Check for five of a kind (score = 50)
def check_five_of_kind(dice):
   if dice[0] == dice[4]:
       return 50
   return 0


# Check for full house (score = 35)
def check_full_house(dice):
   if (dice[0] == dice[1] and dice[2] == dice[3] == dice[4] and dice [0] != dice[2]) or \
      (dice[0] == dice[1] == dice[2] and dice[3] == dice[4] and dice[0] != dice[3]):
      return 35
   return 0


# Check for straight (score = 45)
def check_straight(dice):
   if dice == [1, 2, 3, 4, 5] or dice == [2, 3, 4, 5, 6]:
       return 45
   return 0


if __name__ == '__main__':  # Do not modify
   # Fill array with five dice from input
   dice = [int(val) for val in input().split()]


   high_score = 0


   # Place dice in ascending order
   dice.sort()


   # Find high score and output
   high_score = find_high_score(dice)


   print(f'High score: { high_score }')
